@inject AuthenticationStateProvider AuthenticationStateProvider
@using Microsoft.AspNetCore.Components.Authorization
@inherits LayoutComponentBase


<div class="main-layout">
    <header>
        <h1>Movie Rental</h1>
        <nav>
            <ul>
                <li><a href="/">Homepage</a></li>
                <li><a href="/movies">Movies</a></li>
                <li><a href="/genres">Genres</a></li>
                <li><a href="/about">About</a></li>
            </ul>
        </nav>
        <div class="auth-buttons">
            @if (!isUserAuthenticated)
            {
                <a href="/login">Log in</a>
                <a href="/register">Sign up</a>
            }
            else
            {
                <p>@Username</p>   
            }
            
        </div>
    </header>

    <main>
        @Body
    </main>
    
</div>

<div id="blazor-error-ui" data-nosnippet>
    An unhandled error occurred.
    <a href="." class="reload">Reload</a>
    <span class="dismiss">🗙</span>
</div>

@code {

    private bool isUserAuthenticated;
    private string? Username;

    protected override async Task OnInitializedAsync()
    {
        isUserAuthenticated = await IsUserAuthenticatedAsync();
        
    }

    private async Task<bool> IsUserAuthenticatedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        Username = authState.User.Identity.Name;
        Console.WriteLine(Username);
        return authState.User.Identity.IsAuthenticated;
    }
}
