@using System.Security.Claims
@inject NavigationManager NavigationManager

<nav class="navbar navbar-expand-lg">
	<div class="collapse navbar-collapse justify-content-between" id="navbarNav">
		<ul class="navbar-nav">
			<li class="nav-item">
				<a class="nav-link" href="/">Homepage</a>
			</li>
			<li class="nav-item">
				<a class="nav-link" href="/movies">Movies</a>
			</li>
			<li class="nav-item">
				<a class="nav-link" href="/about">About</a>
			</li>
		</ul>
		<ul class="navbar-nav ml-auto">
			<AuthorizeView>
				<Authorized>
					@if (context.User.Claims.FirstOrDefault(c => c.Type == ClaimTypes.Role)?.Value == "Admin")
					{
						<li class="nav-item">
							<a class="nav-link" href="/admin-panel">Admin Panel</a>
						</li>
					}
					<li class="nav-item">
						<a class="nav-link" href="/profile">@context.User.Identity?.Name</a>
					</li>
					<li class="nav-item">
						<a class="nav-link" @onclick="Logout">Logout</a>
					</li>
				</Authorized>
				<NotAuthorized>
					<li class="nav-item">
						<a class="nav-link" href="/login">Login</a>
					</li>
					<li class="nav-item">
						<a class="nav-link" href="/register">Register</a>
					</li>
				</NotAuthorized>
			</AuthorizeView>
		</ul>
	</div>
</nav>

@code {


	private async Task Logout()
	{
		await Provider.MarkUserAsLoggedOut();
		NavigationManager.NavigateTo(NavigationManager.Uri, true);
		StateHasChanged();
	}

}