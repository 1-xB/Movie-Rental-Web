@page "/movies/{MovieName}"
@using MovieRental.Frontend.Models
@inject GenreService GenreService
@inject HttpClient Http
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<CascadingAuthenticationState>
    <PageTitle>
        @if (SearchedMovieModel is null) 
        {
            <text>This movie is not available on our website!</text>
        }
        else
        {
            <text> @SearchedMovieModel.Title </text>
        }
    </PageTitle>

    <nav>
        <NavMenu></NavMenu>
    </nav>

    <main class="container mt-4">
        @if (SearchedMovieModel is null)
        {
            <div class="alert alert-warning" role="alert">
                This movie is not available on our website!
            </div>
        }
        else
        {
            <div class="card">
                <div class="card-body">
                    <h1 class="card-title">@SearchedMovieModel.Title</h1>
                    <p class="card-text">@SearchedMovieModel.Description</p>
                    <p class="card-text">Genre: @Genres.Where(g => g.Id == @SearchedMovieModel.GenreId).Select(g => g.Name).FirstOrDefault()</p>
                    <p class="card-text">Available Copies: @SearchedMovieModel.AvailableCopies</p>
                    <div class="d-flex justify-content-center">
                        <button class="btn btn-primary">Rent</button>
                    </div>
                </div>
            </div>
        }
        <button class="btn btn-secondary mt-3" @onclick="GoBack">Back</button>
    </main>
</CascadingAuthenticationState>

@code {
    [Parameter] public string? MovieName { get; set; }
    private MovieModel? SearchedMovieModel { get; set; }
    private List<GenreModel>? Genres { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            SearchedMovieModel = await Http.GetFromJsonAsync<MovieModel>($"api/movie/search?title={MovieName}");
            Genres = await GenreService.GetGenresAsync(Http);
        }
        catch
        {
            // ignored
        }
    }

    private void GoBack()
    {
        NavigationManager.NavigateTo("/movies");   
    }

}